<?php

namespace app\plugins\agent\models;

use app\models\BaseActiveRecord;
use app\models\User;
use app\plugins\agent\events\AgentInsertEvent;
use app\plugins\agent\handlers\AgentInsertHandler;
use Exception;
use Yii;

/**
 * This is the model class for table "{{%plugin_agent}}".
 *
 * @property int $id
 * @property int $mall_id
 * @property int $user_id
 * @property string|null $remarks 备注
 * @property int $is_delete
 * @property int $created_at 创建时间
 * @property int $deleted_at 删除时间
 * @property int $updated_at 修改时间
 * @property int $total_childs 所有下级数量
 * @property int $total_order 分销订单数量
 * @property int $level 分销商等级
 * @property int $upgrade_level_at 分销商等级升级时间
 * @property float $total_price 佣金
 * @property float $frozen_price 冻结佣金
 * @property User $user
 * @property string $delete_reason 删除原因
 * @property int $upgrade_status
 * @property AgentLevel $agentLevel
 */
class Agent extends BaseActiveRecord
{

    const UPGRADE_STATUS_CONDITION = 1;
    const UPGRADE_STATUS_GOODS = 2;
    const UPGRADE_STATUS_MANUAL = 3;


    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%plugin_agent}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['mall_id', 'user_id'], 'required'],
            [['mall_id', 'user_id', 'is_delete', 'created_at', 'deleted_at', 'updated_at', 'total_childs', 'total_order', 'level', 'upgrade_level_at', 'upgrade_status'], 'integer'],
            [['remarks', 'delete_reason'], 'string'],
            [['total_price','frozen_price'], 'number'],
        ];
    }


    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'mall_id' => 'Mall ID',
            'user_id' => 'User ID',
            'remarks' => '备注',
            'is_delete' => 'Is Delete',
            'created_at' => '创建时间',
            'deleted_at' => '删除时间',
            'updated_at' => '修改时间',
            'total_childs' => '所有下级数量',
            'total_order' => '分销订单数量',
            'level' => '分销商等级',
            'upgrade_level_at' => '分销商等级升级时间',
            'total_price' => '总佣金',
            'frozen_price' => '冻结佣金',
            'delete_reason' => '删除原因',
            'upgrade_status' => '升级方式，1条件升级 2 购买指定商品升级 3手动升级'
        ];
    }

    public function getUser()
    {
        return $this->hasOne(User::class, ['id' => 'user_id']);
    }

    public function getAgentLevel()
    {
        return $this->hasOne(AgentLevel::class, ['level' => 'level','is_delete' => self::NO]);
    }

    public function afterSave($insert, $changedAttributes)
    {
        if (!$this->is_delete) {
            //新纪录才去
            if ($insert) {
                Yii::$app->trigger(AgentInsertHandler::AGENT_INSERT,
                    new AgentInsertEvent(['user_id' => $this->user_id, 'mall_id' => $this->mall_id]));
            } else {
                Yii::warning('不是新增分销商');
            }
        }
        return parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }


    /**
     * 添加一个经销商
     * @Author bing
     * @DateTime 2020-10-27 15:54:55
     * @copyright: Copyright (c) 2020 广东七件事集团
     * @param [type] $data
     * @return void
     */
    public static function setData($data){
        $t = \Yii::$app->db->beginTransaction();
        try {
            $user = User::findOne(array('id' => $data['user_id'], 'is_delete' => 0));
            if (!$user) throw new Exception('用户不存在');
            $agent = self::findOne(['user_id' => $data['user_id'], 'is_delete' => 0]);
            if ($agent) throw new Exception('用户已经是经销商，请勿重复提交');
            
            $now = time();
            $agent = new Self();
            $agent->mall_id = $user->mall_id;
            $agent->user_id = $user->id;
            $agent->created_at = $now;
            $agent->level=$data['level'];
            $agent->is_delete = 0;
            $res = $agent->save();
            if($res === false) throw new Exception($agent->getErrorMessage());
            if (!$user->is_inviter) {
                $user->is_inviter = 1;
                $user->inviter_at = $now;
                $res = $user->save();
                if ($res === false) throw new Exception($user->getErrorMessage());
            }
            $t->commit();
            return true;
        } catch (\Exception $e) {
            $t->rollBack();
            self::$error = $e->getMessage();
            return false;
        }
    }


    /**
     * 根据用户获取指定经销商
     * @Author bing
     * @DateTime 2020-09-21 15:24:43
     * @copyright: Copyright (c) 2020 广东七件事集团
     * @param integer $user_id
     * @return array
     */
    public static function getAgentByUserId(int $user_id,int $mall_id = 0){
        return self::find()
        ->where(array('mall_id' => Yii::$app->mall->id ?? $mall_id,'user_id'=>$user_id,'is_delete' => 0))
        ->asArray()
        ->one();
    }

}
