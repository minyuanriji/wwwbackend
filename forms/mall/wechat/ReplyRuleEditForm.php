<?php
/**
 * @link:http://www.gdqijianshi.com/
 * @copyright: Copyright (c) 2020 广东七件事集团
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-04-23
 * Time: 15:41
 */

namespace app\forms\mall\wechat;


use app\core\ApiCode;
use app\models\BaseModel;
use app\models\ReplyRule;
use app\models\RuleKeyword;

class ReplyRuleEditForm extends BaseModel
{
    public $match_keywords;
    public $include_keywords;
    public $name;
    public $reply_type;
    public $status;
    public $content;
    public $id;

    public function rules()
    {
        return [
            [['name'], 'required'],
            [['status', 'id'], 'integer'],
            [['name'], 'string', 'max' => 45],
            [['match_keywords', 'include_keywords'], 'string', 'max' => 255],
            [['content'], 'string', 'max' => 255],
            [['reply_type'], 'string', 'max' => 10],
        ];
        // TODO: Change the autogenerated stub
    }


    public function save()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $t = \Yii::$app->db->beginTransaction();
        $rule = ReplyRule::findOne(['is_delete' => 0, 'id' => $this->id]);
        if (!$rule) {
            $rule = new ReplyRule();
        }
        $rule->attributes = $this->attributes;
        $rule->mall_id = \Yii::$app->mallId;
        if (!$rule->save()) {
            return $this->responseErrorInfo($rule);
        }
        RuleKeyword::updateAll(['is_delete' => 1], ['rule_id' => $rule->id]);
        $keyword_list = explode(',', $this->match_keywords);
        foreach ($keyword_list as $item) {
            $keyword = new RuleKeyword();
            $keyword->keyword = $item;
            $keyword->type = RuleKeyword::TYPE_MATCH;
            $keyword->mall_id = $rule->mall_id;
            $keyword->status=$this->status;
            $keyword->rule_id = $rule->id;
            if (!$keyword->save()) {
                $t->rollBack();
                return $this->responseErrorInfo($keyword);
            }
        }
        $keyword_list = explode(',', $this->include_keywords);
        foreach ($keyword_list as $item) {
            $keyword = new RuleKeyword();
            $keyword->keyword = $item;
            $keyword->type = RuleKeyword::TYPE_INCLUDE;
            $keyword->mall_id = $rule->mall_id;
            $keyword->rule_id = $rule->id;
            $keyword->status=$this->status;
            if (!$keyword->save()) {
                $t->rollBack();
                return $this->responseErrorInfo($keyword);
            }
        }

        $t->commit();
        return ['code' => ApiCode::CODE_SUCCESS, 'msg' => '新增成功'];
    }


}