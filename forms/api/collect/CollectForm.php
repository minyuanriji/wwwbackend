<?php
/**
 * @link:http://www.gdqijianshi.com/
 * @copyright: Copyright (c) 2020 广东七件事集团
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-05-12
 * Time: 14:18
 */

namespace app\forms\api\collect;


use app\core\ApiCode;
use app\core\BasePagination;
use app\models\BaseModel;
use app\models\Goods;
use app\models\GoodsCollect;
use app\models\GoodsWarehouse;

class CollectForm extends BaseModel
{
    public $goods_id;
    public $page = 1;
    public $limit = 10;
    public $type = 'goods';
    public $id;


    public function rules()
    {
        return [
            [['goods_id', 'page', 'limit','id'], 'integer'],
            ['page', 'default', 'value' => 1],
            ['limit', 'default', 'value' => 20],
            [['type'], 'string']
        ]; // TODO: Change the autogenerated stub

    }


    /**
     * @Author: 广东七件事 ganxiaohao
     * @Date: 2020-05-12
     * @Time: 19:38
     * @Note:保存收藏
     * @return array
     */
    public function save()
    {
        if ($this->goods_id) {
            return $this->addGoodAdd();
        }
    }


    /**
     * @Author: 广东七件事 ganxiaohao
     * @Date: 2020-05-12
     * @Time: 14:24
     * @Note:
     * @return array
     */
    public function addGoodAdd()
    {
        if (!$this->goods_id) {
            return $this->returnApiResultData(ApiCode::CODE_FAIL, '收藏失败');
        }
        $goods_exist = Goods::find()->where(['id' => $this->goods_id, 'is_delete' => 0, 'is_recycle' => 0])->exists();
        if (!$goods_exist) {
            return $this->returnApiResultData(ApiCode::CODE_FAIL, '商品不存在或已被删除');
        }
        $collect = GoodsCollect::findOne(['user_id' => \Yii::$app->user->id, 'goods_id' => $this->goods_id, 'is_delete' => 0]);
        if ($collect) {
            return $this->returnApiResultData(ApiCode::CODE_FAIL, '您已收藏过该商品！');
        }
        $collect = new GoodsCollect();
        $collect->goods_id = $this->goods_id;
        $collect->user_id = \Yii::$app->user->id;
        $collect->mall_id = \Yii::$app->mall->id;
        if (!$collect->save()) {
            return $this->returnApiResultData();
        }
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, '收藏成功', ['id' => $collect->id]);
    }


    /**
     * @Author: 广东七件事 ganxiaohao
     * @Date: 2020-05-12
     * @Time: 19:38
     * @Note:获取收藏列表
     * @return array
     */
    public function getList()
    {
        $newList = [];
        /**
         * @var BasePagination $pagination
         */
        if ($this->type == 'goods') {
            $list = GoodsCollect::find()
                ->with('goods')
                ->where(['mall_id' => \Yii::$app->mall->id, 'is_delete' => 0, 'user_id' => \Yii::$app->user->id])
                ->page($pagination, $this->limit, $this->page)
                ->all();
            /**
             * @var GoodsCollect $list [];
             * @var GoodsWarehouse $goodsInfo
             */
            foreach ($list as $item) {
                $goodsInfo = $item->goods->goodsWarehouse;
                $newItem['collect_id'] = $item->id;
                $newItem['goods_id'] = $item->goods_id;
                $newItem['goods_name'] = $goodsInfo->name;
                $newItem['created_at'] = date('Y-m-d', $item->created_at);
                $newItem['cover_pic'] = $goodsInfo->cover_pic;
                $newItem['price'] = $item->goods->price;
                $newList[] = $newItem;
            }
        }
        if (count($newList)) {
            return $this->returnApiResultData(ApiCode::CODE_SUCCESS, '', ['list' => $newList,
                'page_count' => $pagination->page_count, 'total_count' => $pagination->total_count
            ]);
        }
        return $this->returnApiResultData(ApiCode::CODE_FAIL, '暂无收藏');
    }


    /**
     * @Author: 广东七件事 ganxiaohao
     * @Date: 2020-05-12
     * @Time: 19:39
     * @Note:删除收藏
     * @return array
     */
    public function delete()
    {

//        if ($this->type == 'goods') {
            $goods_collect = GoodsCollect::findOne(['id' => $this->id, 'is_delete' => 0, 'mall_id' => \Yii::$app->mall->id, 'user_id' => \Yii::$app->user->id]);
            if (!$goods_collect) {
                return $this->returnApiResultData(ApiCode::CODE_FAIL, '该收藏不存在或已被删除');
            }
            $goods_collect->is_delete = 1;
            if (!$goods_collect->save()) {
                return $this->returnApiResultData(ApiCode::CODE_FAIL, '删除失败');
            }
            return $this->returnApiResultData(ApiCode::CODE_SUCCESS, '删除成功');
//        }
//        return $this->returnApiResultData(ApiCode::CODE_FAIL, '删除失败');

    }

}