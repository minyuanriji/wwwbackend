<?php

/**
 * @link:http://www.gdqijianshi.com/
 * @copyright: Copyright (c) 2020 广东七件事集团
 * 拼团插件核心
 * Author: xuyaoxiang
 * Date: 2020-08-24
 * Time: 14:10
 */

namespace app\plugins\group_buy;

use app\helpers\PluginHelper;
use app\handlers\BaseHandler;
use app\plugins\group_buy\handlers\HandlerRegister;

class Plugin extends \app\plugins\Plugin
{
    /**
     * 插件唯一id，小写英文开头，仅限小写英文、数字、下划线
     * @return string
     */
    public function getName()
    {
        return 'group_buy';
    }

    /**
     * 插件显示名称
     * @return string
     */
    public function getDisplayName()
    {
        return '拼团';
    }


    /**
     * 获取插件菜单列表
     * @return array
     */
    public function getMenus()
    {
        return [
            [
                'name'   => '拼团首页',
                'route'  => 'plugin/group_buy/mall/index/index',
                'icon'   => 'el-icon-star-on',
                'action' => [
                    [
                        'name'  => '首页',
                        'route' => 'plugin/group_buy/mall/index/index',
                    ],
                    [
                        'name'  => '添加',
                        'route' => 'plugin/group_buy/mall/index/add',
                    ],
                    [
                        'name'  => '编辑',
                        'route' => 'plugin/group_buy/mall/index/edit',
                    ],
                    [
                        'name'  => '拼团列表',
                        'route' => 'plugin/group_buy/mall/group/list',
                    ],
                ]
            ],
            [
                'name'   => '订单列表',
                'route'  => 'plugin/group_buy/mall/order/list',
                'icon'   => 'el-icon-star-on',
                'action' => [
                    [
                        'name'  => '订单列表',
                        'route' => 'plugin/group_buy/mall/order/list',
                    ],
                    [
                        'name'  => '订单详情',
                        'route' => 'plugin/group_buy/mall/order/detail',
                    ],
                ]
            ]
        ];
    }

    /**
     * 插件的小程序端配置，小程序端可使用getApp().config(e => { e.plugin.xxx });获取配置，xxx为插件唯一id
     * @return array
     */
    public function getAppConfig()
    {
        $imageBaseUrl = PluginHelper::getPluginBaseAssetsUrl($this->getName()) . '/img';
        return [
            'app_image' => [
                'logo' => $imageBaseUrl . '/logo.jpeg',
            ]
        ];
    }

    /**
     * 获取插件入口路由
     * @return string|null
     */
    public function getIndexRoute()
    {
        return 'plugin/group_buy/mall/index/index';
    }

    public function getIsSetToQuickMenu()
    {
        return false; // TODO: Change the autogenerated stub
    }

    public function getMenuForMainMenu()
    {
        return [
            'key'         => $this->getName(),
            'name'        => $this->getDisplayName(),
            'route'       => $this->getIndexRoute(),
            'children'    => $this->getMenus(),
            'icon'        => 'statics/img/mall/nav/finance.png',
            'icon_active' => 'statics/img/mall/nav/finance-active.png',
        ]; // TODO: Change the autogenerated stub; // TODO: Change the autogenerated stub
    }

    /**
     * 插件小程序端链接
     * @return array
     */
    public function getPickLink()
    {
        $iconBaseUrl = PluginHelper::getPluginBaseAssetsUrl($this->getName()) . '/img/pick-link';

        return [
            [
                'key'       => 'group_buy',
                'name'      => '拼团订单',
                'open_type' => '',
                'icon'      => $iconBaseUrl . '/group_buy_list.png',
                'value'     => '/mch/group-buy/orderList',
            ],
            [
                'key'       => 'group_buy',
                'name'      => '拼团列表',
                'open_type' => '',
                'icon'      => $iconBaseUrl . '/group_buy_list.png',
                'value'     => '/mch/group-buy/list',
            ],
        ];
    }


    public function getLogo()
    {
        // TODO: Implement getLogo() method.
    }

    public function getPriceTypeName($price_log_id = 0)
    {
        // TODO: Implement getPriceTypeName() method.
    }

    public function handler()
    {
        $register = new HandlerRegister();
        $HandlerClasses = $register->getHandlers();
        foreach ($HandlerClasses as $HandlerClass) {
            $handler = new $HandlerClass();
            if ($handler instanceof BaseHandler) {
                /** @var BaseHandler $handler */
                $handler->register();
            }
        }
        return $this;
    }
}
