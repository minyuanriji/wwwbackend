<?php
/**
 * @link:http://www.gdqijianshi.com/
 * @copyright: Copyright (c) 2020 广东七件事集团
 * 雷达接口处理类
 * Author: zal
 * Date: 2020-07-06
 * Time: 14:30
 */

namespace app\plugins\business_card\forms\api;

use app\core\ApiCode;
use app\logic\UserLogic;
use app\models\BaseModel;
use app\models\CommonOrder;
use app\plugins\business_card\cache\BusinessCardCache;
use app\plugins\business_card\forms\common\BusinessCardTrackLogCommon;
use app\plugins\business_card\forms\common\Common;
use app\plugins\business_card\forms\common\RadarCommon;
use app\plugins\business_card\models\BusinessCardAiAnalysis;
use app\plugins\business_card\models\BusinessCardCustomer;
use app\plugins\business_card\models\BusinessCardTrackLog;
use app\plugins\business_card\models\BusinessCardTrackStat;


class RadarForm extends BaseModel
{
    public $page = 1;
    public $limit = 10;

    public $time_type = 0;

    public $department_id;

    /**
     * @var int 页面类型
     * 销售排行 1客户人数2线索数量3订单数量4交易金额
     * 热度排行 1商品热度2名片热度3资讯热度4直播热度
     * 概括统计 1商城订单统计2新增客户3咨询客户4跟进客户5客户兴趣6客户活跃度
     */
    public $page_type;
    private $msg = "";
    private $code = ApiCode::CODE_SUCCESS;

    public function rules()
    {
        return [
            [['limit'], 'default', 'value' => 10],
            [['page', 'limit','time_type','department_id','page_type'], 'integer'],
            [['keywords'], 'string']
        ]; // TODO: Change the autogenerated stub
    }

    /**
     * 概括-统计
     * @return array
     */
    public function general(){
        $params = [];
        $returnData = $this->getCustomerIds();
        if(empty($returnData)){
            return $this->returnApiResultData($this->code, $this->msg);
        }
        //部门下的所有客戶
        $customerIds = $returnData["customer_id_list"];
        //部门下所有用户
        $authUserIds = $returnData["user_id_list"];
        //所有客户（包括下面的员工）
        $allUserIds = $returnData["allUserIds"];
        unset($returnData["customer_id_list"],$returnData["user_id_list"],$returnData["allUserIds"]);
        $params = Common::selectTimeRange($params,$this->time_type);
        $params["return_count"] = 1;
        $returnData = Common::getRadarStatInfo($returnData,$params,$authUserIds,$allUserIds);

        if(!empty($customerIds)){
            $params = [];
            $params["mall_id"] = \Yii::$app->mall->id;
            $params["operate_id"] = $allUserIds;
            $params["return_count"] = 1;

            //跟进中人数
            $params["status"] = BusinessCardCustomer::STATUS_FOLLOWING;
            $followTotal = BusinessCardCustomer::getData($params);
            //成交人数
            $params["status"] = BusinessCardCustomer::STATUS_DEAL;
            $dealTotal = BusinessCardCustomer::getData($params);
            unset($params["status"]);

            //总客户数
            $userStatData = RadarCommon::getTotalCustomer($allUserIds);
            //总直推人数
            $allDirectPushTotal = $userStatData["direct_push_total"];
            //总间推人数
            $allSpacePushTotal = $userStatData["space_push_total"];
            $total = intval($allDirectPushTotal) + intval($allSpacePushTotal);
            $returnData["stat"]["client_total"] = intval($total);
            $returnData["stat"]["follow_total"] = intval($followTotal);
            $returnData["stat"]["deal_total"] = intval($dealTotal);
        }else{
            $returnData["stat"]["client_total"] = 0;
            $returnData["stat"]["follow_total"] = 0;
            $returnData["stat"]["deal_total"] = 0;
        }

        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", $returnData);
    }

    /**
     * 概括页面图形统计
     * @return BusinessCardCustomer|array|bool|mixed
     */
    public function generalStat(){
        $returnData = $this->getCustomerIds();
        if(empty($returnData)){
            return $this->returnApiResultData($this->code, $this->msg);
        }
        $pageType = intval($this->page_type);
        if($pageType <= 0){
            return $this->returnApiResultData(ApiCode::CODE_FAIL, "参数错误");
        }
        $customerIds = $returnData["customer_id_list"];
        $userIds = $returnData["user_id_list"];
        $allUserIds = array_merge($customerIds,$userIds);
        unset($returnData["customer_id_list"],$returnData["user_id_list"],$returnData["department_list"]);

        //1=商城订单统计 2=新增客户 3=咨询客户 4=跟进客户 5=客户兴趣 6=活跃度
        if($pageType == 1){
            $returnData["list"] = $this->orderTradingVolume($allUserIds);
        }else if($pageType == 2){
            $returnData["list"] = $this->getCustomerTypeStat($allUserIds,BusinessCardCustomer::USER_TYPE_ORDINARY);
        }else if($pageType == 3){
            $returnData["list"] = $this->getCustomerTypeStat($allUserIds,BusinessCardCustomer::USER_TYPE_INTENT,"咨询客户");
        }else if($pageType == 4){
            $returnData["list"] = $this->getCustomerTypeStat($allUserIds,BusinessCardCustomer::STATUS_FOLLOWING,"跟进客户");
        }else if($pageType == 5){
            $returnData["list"] = $this->getInterestStat($allUserIds);
        }else{
            $returnData["list"] = $this->getUserActivity($allUserIds);
        }
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", $returnData);
    }

    /**
     * 销售排行
     * @return array
     */
    public function salesRanking(){
        $pageType = intval($this->page_type);
        if($pageType <= 0){
            return $this->returnApiResultData(ApiCode::CODE_FAIL, "参数错误");
        }
        if($pageType == 1){
            $returnData = $this->salesRankingToCustomerNum();
        }else if($pageType == 2){
            $returnData = $this->salesRankingToClueNum();
        }else if($pageType == 3){
            $returnData = $this->salesRankingToOrderNum();
        }else{
            $returnData = $this->salesRankingToOrderMoney();
        }
        return $returnData;
    }

    /**
     * 销售排行-客户人数
     * @return array
     */
    private function salesRankingToCustomerNum(){
        $params = $returnData = [];
        $returnData = $this->getCustomerIds();
        if(empty($returnData)){
            return $this->returnApiResultData($this->code, $this->msg);
        }
        $customerIds = $returnData["customer_id_list"];
        $userIds = $returnData["user_id_list"];
        $allUserIds = array_merge($customerIds,$userIds);
        unset($returnData["customer_id_list"],$returnData["user_id_list"],$returnData["department_list"]);
        //客户人数
        $params["operate_id"] = $allUserIds;
        $params["sort_key"] = "total";
        $params["sort_val"] = "desc";
        $params["operator"] = 1;
        $params["limit"] = $this->limit;
        $params["page"] = $this->page;
        $params["group_by"] = "operate_id";
        $fields = ['count(id) as total',"operate_id"];
        $customerList = BusinessCardCustomer::getData($params,$fields);
        foreach ($customerList["list"] as &$value){
            $value["nickname"] = $value["operator"]["nickname"];
            $value["avatar_url"] = $value["operator"]["avatar_url"];
            $value["total"] = intval($value["total"]);
            unset($value["operator"]);
        }
        $customerList["pagination"] = $this->getPaginationInfo($customerList["pagination"]);
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", $customerList);
    }

    /**
     * 销售排行-线索数量
     * @return array
     */
    private function salesRankingToClueNum(){
        $params = $returnData = [];
        $returnData = $this->getCustomerIds();
        if(empty($returnData)){
            return $this->returnApiResultData($this->code, $this->msg);
        }
        $customerIds = $returnData["customer_id_list"];
        $userIds = $returnData["user_id_list"];
        $allUserIds = array_merge($customerIds,$userIds);
        unset($returnData["customer_id_list"],$returnData["user_id_list"],$returnData["department_list"]);
        //线索数量
        $params["status"] = BusinessCardCustomer::STATUS_NEW_CLUE;
        $params["operate_id"] = $allUserIds;
        $params["sort_key"] = "total";
        $params["sort_val"] = "desc";
        $params["operator"] = 1;
        $params["group_by"] = "operate_id";
        $params["limit"] = $this->limit;
        $params["page"] = $this->page;
        $fields = ['count(id) as total',"operate_id"];
        $clueList = BusinessCardCustomer::getData($params,$fields);
        foreach ($clueList["list"] as &$value){
            $value["nickname"] = $value["operator"]["nickname"];
            $value["avatar_url"] = $value["operator"]["avatar_url"];
            $value["total"] = intval($value["total"]);
            unset($value["operator"]);
        }
        $clueList["pagination"] = $this->getPaginationInfo($clueList["pagination"]);
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", $clueList);
    }

    /**
     * 销售排行-订单数量
     * @return array
     */
    private function salesRankingToOrderNum(){
        $params = $returnData = [];
        $returnData = $this->getCustomerIds();
        if(empty($returnData)){
            return $this->returnApiResultData($this->code, $this->msg);
        }
        $customerIds = $returnData["customer_id_list"];
        $userIds = $returnData["user_id_list"];
        $allUserIds = array_merge($customerIds,$userIds);
        unset($returnData["customer_id_list"],$returnData["user_id_list"],$returnData["department_list"]);
        $params["is_pay"] = CommonOrder::STATUS_IS_PAY;
        $params["user_id"] = $allUserIds;
        $params["sort_key"] = "total";
        $params["sort_val"] = "desc";
        $params["group_by"] = "user_id";
        $params["user"] = 1;
        $params["limit"] = $this->limit;
        $params["page"] = $this->page;
        $fields = ['count(id) as total',"user_id"];
        $orderList = CommonOrder::getData($params,$fields);
        foreach ($orderList["list"] as &$value){
            $value["nickname"] = $value["user"]["nickname"];
            $value["avatar_url"] = $value["user"]["avatar_url"];
            $value["total"] = intval($value["total"]);
            unset($value["operator"]);
        }
        $orderList["pagination"] = $this->getPaginationInfo($orderList["pagination"]);
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", $orderList);
    }

    /**
     * 销售排行-订单交易金额
     * @return array
     */
    private function salesRankingToOrderMoney(){
        $params = $returnData = [];
        $returnData = $this->getCustomerIds();
        if(empty($returnData)){
            return $this->returnApiResultData($this->code, $this->msg);
        }
        $customerIds = $returnData["customer_id_list"];
        $userIds = $returnData["user_id_list"];
        $allUserIds = array_merge($customerIds,$userIds);
        unset($returnData["customer_id_list"],$returnData["user_id_list"],$returnData["department_list"]);
        $params["is_pay"] = CommonOrder::STATUS_IS_PAY;
        $params["user_id"] = $allUserIds;
        $params["sort_key"] = "total";
        $params["sort_val"] = "desc";
        $params["user"] = 1;
        $params["group_by"] = "user_id";
        $params["limit"] = $this->limit;
        $params["page"] = $this->page;
        $fields = ['sum(pay_price) as total',"user_id"];
        $orderList = CommonOrder::getData($params,$fields);
        foreach ($orderList["list"] as &$value){
            $value["nickname"] = $value["user"]["nickname"];
            $value["avatar_url"] = $value["user"]["avatar_url"];
            $value["total"] = intval($value["total"]);
            unset($value["user"]);
        }
        $orderList["pagination"] = $this->getPaginationInfo($orderList["pagination"]);
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", $orderList);
    }

    /**
     * 重新组装部门列表数据
     * @param $returnData
     * @param $departmentList
     * @return mixed
     */
    private function getDepartmentList($returnData,$departmentList){
        foreach ($departmentList as &$value){
            unset($value["created_at"],$value["updated_at"],$value["deleted_at"],$value["is_delete"],$value["sort"]);
        }
        $returnData["department_list"] = $departmentList;
        return $returnData;
    }

    /**
     * 订单成交量和交易额
     * @param $departmentUserIds
     * @return array
     */
    private function orderTradingVolume($departmentUserIds){
        $returnData = $data = $params = $categories = $orderNumData = $orderMoneyData = [];
        $params = Common::selectTimeRange($params,$this->time_type);
        $dateData = Common::getDayDate($this->time_type);
        $params["user_id"] = $departmentUserIds;
        $params["is_pay"] = 1;
        $params["group_by"] = "access_at";
        $params["sort_key"] = "access_at";
        $params["sort_val"] = "asc";
        //订单量
        $fields = ['count(id) as total',"FROM_UNIXTIME( created_at, '%Y-%m-%d' ) AS access_at"];
        $orderNumList = CommonOrder::getData($params,$fields);
        //订单交易额
        $fields = ['sum(pay_price) as total',"FROM_UNIXTIME( created_at, '%Y-%m-%d' ) AS access_at"];
        $orderMoneyList = CommonOrder::getData($params,$fields);

        $orderStatData = [];
        if(!empty($orderNumList)){
            foreach ($orderNumList as $value){
                $orderNumData[$value["access_at"]]["total"] = intval($value["total"]);
            }
            $orderStatData[0] = $orderNumData;
        }

        if(!empty($orderMoneyList)){
            foreach ($orderMoneyList as $value){
                $orderMoneyData[$value["access_at"]]["total"] = intval($value["total"]);
            }
            $orderStatData[1] = $orderMoneyData;
        }

        foreach ($dateData as $val){
            $categories[] = date("m-d",strtotime($val));
            $data[] = 0;
        }

        $names = ["商城订单量","交易金额"];
        $series = [];
        for ($i=0;$i<2;$i++){
            if(isset($orderStatData[$i])){
                $data = [];
                foreach ($dateData as $val){
                    $data[] = isset($orderStatData[$i][$val]) ? $orderStatData[$i][$val]["total"] : 0;
                }
            }
            $series["name"] = $names[$i];
            $series["data"] = $data;
            $returnData["series"][] = $series;
        }
        $returnData["categories"] = $categories;
        return $returnData;
    }

    /**
     * 客户类型统计
     * @param $departmentUserIds
     * @param $userType 0新增客户1咨询客户2跟进客户
     * @param string $name
     * @return array
     */
    private function getCustomerTypeStat($departmentUserIds,$userType,$name = "新增客户"){
        $returnData = $data = $params = $categories = $orderNumData = $orderMoneyData = [];
        $dateData = Common::getDayDate($this->time_type);
        $params = Common::selectTimeRange($params,$this->time_type);
        $params["mall_id"] = \Yii::$app->mall->id;
        $params["operate_id"] = $departmentUserIds;
        $fields = ['count(id) as total',"FROM_UNIXTIME( updated_at, '%Y-%m-%d' ) AS access_at"];
        if($userType == 2){
            $params["status"] = $userType;
        }else{
            $params["user_type"] = $userType;
        }
        $depthData = [];
        $list = BusinessCardCustomer::getData($params,$fields);
        if(!empty($list)){
            foreach ($list as $value){
                if(!empty($value["access_at"])){
                    $depthData[$value["access_at"]]["total"] = intval($value["total"]);
                }
            }
        }

        foreach ($dateData as $val){
            $categories[] = date("m-d",strtotime($val));
            $data[] = isset($depthData[$val]) ? $depthData[$val]["total"] : 0;
        }
        $series = [];
        $series["name"] = $name;
        $series["data"] = $data;
        $returnData["series"][] = $series;
        $returnData["categories"] = $categories;
        return $returnData;
    }


    /**
     * 客户兴趣统计
     * @param $userIds
     * @return array
     */
    private function getInterestStat($userIds){
        $returnData = $data = $params = [];
        $params["is_one"] = 1;
        $params["user_id"] = $userIds;
        //$params["group_by"] = "track_type";
        $fields = ['sum(total) as total','track_type'];
        $interestData = BusinessCardTrackStat::getData($params,$fields);
        //总数
        $allTotal = 0;
        if(!empty($interestData)){
           $allTotal = $interestData["total"];
        }

        //访问商城首页
        $params = [];
        $params["is_one"] = 1;
        $params["user_id"] = $userIds;
        $params["track_type"] = BusinessCardTrackStat::TRACK_TYPE_MALL_INDEX;
        $fields = ['sum(total) as total'];
        $interestData = BusinessCardTrackStat::getData($params,$fields);
        $mallTotal = $interestData["total"];
        //对公司感兴趣占比
        $mallInterestRate = number_format($mallTotal/$allTotal,2);
        $data[0]["name"] = "对公司感兴趣";
        $data[0]["data"] = $mallInterestRate;

        //访问产品页
        $params = [];
        $params["is_one"] = 1;
        $params["user_id"] = $userIds;
        $params["track_type"] = BusinessCardTrackStat::TRACK_TYPE_GOODS;
        $fields = ['sum(total) as total'];
        $interestData = BusinessCardTrackStat::getData($params,$fields);
        $goodsTotal = $interestData["total"];
        //对产品感兴趣占比
        $goodsInterestRate = number_format($goodsTotal/$allTotal,2);
        $data[1]["name"] = "对产品感兴趣";
        $data[1]["data"] = $goodsInterestRate;

        //访问我的名片页
        $params = [];
        $params["is_one"] = 1;
        $params["user_id"] = $userIds;
        $params["track_type"] = [BusinessCardTrackStat::TRACK_TYPE_LOOK_CARD,BusinessCardTrackStat::TRACK_TYPE_FORWARD_CARD];
        $fields = ['sum(total) as total'];
        $interestData = BusinessCardTrackStat::getData($params,$fields);
        $cardTotal = $interestData["total"];
        //对产品感兴趣占比
        $goodsInterestRate = number_format($cardTotal/$allTotal,2);
        $data[2]["name"] = "对我感兴趣";
        $data[2]["data"] = $goodsInterestRate;
        return $data;
    }

    /**
     * 客户活跃度
     * @param $userIds
     * @return array
     */
    private function getUserActivity($userIds){
        $returnData = $data = $params = $categories = $depthData = [];
        $params = Common::selectTimeRange($params,$this->time_type);
        $params["user_id"] = $userIds;
        $dateData = Common::getDayDate($this->time_type);
        $params["group_by"] = "access_at";
        $params["sort_key"] = "access_at";
        $params["sort_val"] = "asc";
        //$params["track_type"] = array_keys(BusinessCardTrackStat::$interests);
        $fields = ['count(id) as total',"FROM_UNIXTIME( created_at, '%Y-%m-%d' ) AS access_at"];
        $list = BusinessCardTrackLog::getData($params,$fields);
        if(!empty($list)){
            foreach ($list as $value){
                $depthData[$value["access_at"]]["total"] = intval($value["total"]);
            }
        }
        foreach ($dateData as $val){
            $categories[] = date("m-d",strtotime($val));
            $data[] = isset($depthData[$val]) ? $depthData[$val]["total"] : 0;
        }
        $returnData["categories"] = $categories;
        $series = [];
        $series["name"] = "客户活跃度";
        $series["data"] = $data;
        $returnData["series"][] = $series;
        return $returnData;
    }

    /**
     * 获取部门下所有成员的客户
     * @return BusinessCardCustomer|array|bool|mixed
     */
    private function getCustomerIds(){
        try{
            $userId = \Yii::$app->user->id;
            $departments = [];
            if(empty($departments)){
                $departments = RadarCommon::getUserDepartmentList($this->department_id);
                if(empty($departments)){
                    if($departments === false){
                        $this->msg = "没有权限查看";
                        $this->code = ApiCode::CODE_CARD_NOT_AUTH;
                        return false;
                    }
                    $this->msg = "没有加入任何部门";
                    $this->code = ApiCode::CODE_CARD_NOT_AUTH;
                    return false;
                }
            }else{
                $departments = json_decode($departments,true);
            }
            $departments = $this->getDepartmentList($departments,$departments["department_list"]);
            //部门下所有员工
            $user_id_list = $departments["user_id_list"];
            //所有员工操作的直推客户
            $customer_id_list = $departments["customer_id_list"];
            //部门下所有用户
            $allUserIds = array_merge($user_id_list,$customer_id_list);
            $allUserIds = array_unique($allUserIds);
            $departments["allUserIds"] = $allUserIds;
            //unset($departments["user_id_list"]);
            return $departments;
        }catch(\Exception $ex){
            $this->msg = $ex->getMessage();
            $this->code = ApiCode::CODE_CARD_NOT_AUTH;
            return false;
        }
    }

    /**
     * 热度排行
     * @return array
     */
    public function hotRanking(){
        $pageType = intval($this->page_type);
        if($pageType <= 0 || empty($pageType)){
            return $this->returnApiResultData(ApiCode::CODE_FAIL, "参数错误");
        }
        $returnData = $this->getCustomerIds();
        if(empty($returnData)){
            return $this->returnApiResultData($this->code, $this->msg);
        }
        if(empty($this->time_type)){
            $this->time_type = 1;
        }
        $customerIds = $returnData["customer_id_list"];
        $userIds = $returnData["user_id_list"];
        $allUserIds = array_merge($customerIds,$userIds);
        $hotParams = [];
        $hotParams["limit"] = $this->limit;
        $hotParams["page"] = $this->page;
        $hotParams["user_id"] = $allUserIds;
        $hotParams = Common::selectTimeRange($hotParams,$this->time_type);
        if($pageType == 1){
            $hotParams["track_type"] = BusinessCardTrackLog::TRACK_TYPE_GOODS;
        }else if($pageType == 2){
            $hotParams["track_type"] = [BusinessCardTrackLog::TRACK_TYPE_LOOK_CARD,BusinessCardTrackLog::TRACK_TYPE_FORWARD_CARD];
        }else if($pageType == 3){
            return $this->newsHotRank();
        }else{
            return $this->liveHotRank();
        }
        $returnData = BusinessCardTrackLogCommon::selectTrackLogHotRankList($hotParams);
        $returnData["pagination"] = $this->getPaginationInfo($returnData["pagination"]);
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", $returnData);
    }

    /**
     * 资讯热度排行
     * @return array
     */
    private function newsHotRank(){
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", []);
    }

    /**
     * 直播热度排行
     * @return array
     */
    private function liveHotRank(){
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", []);
    }

    /**
     * 客户详情-AI分析
     * @return array
     */
    public function aiAnalysis(){
        $returnData = $this->getCustomerIds();
        if(empty($returnData)){
            return $this->returnApiResultData($this->code, $this->msg);
        }
        if(empty($this->time_type)){
            $this->time_type = 1;
        }
        $customerIds = $returnData["customer_id_list"];
        $userIds = $returnData["user_id_list"];
        $allUserIds = array_merge($customerIds,$userIds);
        unset($returnData["department_list"]);
        $params = [];
        $params["page"] = $this->page;
        $params["limit"] = $this->limit;
        $params["user_id"] = $allUserIds;
        $params["mall_id"] = \Yii::$app->mall->id;
        $params["user"] = 1;
        $params["sort_key"] = "average";
        $params["group_by"] = "user_id";
        $fields = ['sum(sales_active) as sales_active','sum(website_promote) as website_promote','sum(goods_promote) as goods_promote',
                   'sum(deal_ability) as deal_ability','sum(customers_ability) as customers_ability','sum(personal_appeal) as personal_appeal',
                   'sum(average) as average',"user_id"];
        $list = BusinessCardAiAnalysis::getData($params,$fields);
        $data = $aiData = $categories = [];

        foreach (BusinessCardAiAnalysis::$aiAnalysis as $val){
            $categories[] = $val;
        }
        foreach ($list["list"] as $value){
            $data["position_name"] = isset($value["businessCard"]["position"]["name"]) ? $value["businessCard"]["position"]["name"] : "";
            $data["nickname"] = isset($value["user"]["nickname"]) ? $value["user"]["nickname"] : "";
            $data["avatar_url"] = isset($value["user"]["avatar_url"]) ? $value["user"]["avatar_url"] : "";
            $data["sales_active"] = intval($value["sales_active"]);
            $data["website_promote"] = intval($value["website_promote"]);
            $data["goods_promote"] = intval($value["goods_promote"]);
            $data["deal_ability"] = intval($value["deal_ability"]);
            $data["customers_ability"] = intval($value["customers_ability"]);
            $data["personal_appeal"] = intval($value["personal_appeal"]);
            $data["average"] = $value["average"];
            $data["radar_data"]["categories"] = $categories;
            $series = $data["radar_data"]["series"] = [];
            $series["name"] = "综合统计";
            $series["color"] = "#bc0100";
            $series["data"] = [$data["sales_active"],$data["website_promote"],$data["goods_promote"],
                                $data["deal_ability"],$data["customers_ability"],$data["personal_appeal"]];
            $data["radar_data"]["series"][] = $series;
            $aiData[] = $data;
        }
        $returnData["list"] = $aiData;
        $returnData["pagination"] = $this->getPaginationInfo($list["pagination"]);
        return $this->returnApiResultData(ApiCode::CODE_SUCCESS, "", $returnData);
    }

}