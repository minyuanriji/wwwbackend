<?phpnamespace app\plugins\business_card\models;use app\models\BaseActiveRecord;use app\models\User;use Yii;/** * 用户轨迹 * This is the model class for table "{{%plugin_business_card_track_stat}}". * * @property int $id * @property int $mall_id * @property int $user_id * @property int $track_user_id 轨迹对象id * @property int $total * @property int $track_type 轨迹类型1商城首页2查看图文3产品4授权号码5转发名片6查看名片7查看视频8保存电话9点赞10收藏11评论12查看动态 * @property int $model_id 模块id,如名片存的是名片id，列表显示0 * @property int $created_at * @property int $deleted_at * @property int $updated_at * @property int $is_delete * * @property User $user * @property User $trackUser */class BusinessCardTrackStat extends BaseActiveRecord{    /** @var int 轨迹类型1商城首页2查看图文3产品4授权号码5转发名片6查看名片7查看视频8保存电话9点赞10收藏11评论12查看动态13查看资讯14查看直播15教育 */    const TRACK_TYPE_MALL_INDEX = 1;    const TRACK_TYPE_GRAPHIC = 2;    const TRACK_TYPE_GOODS = 3;    const TRACK_TYPE_AUTH_MOBILE = 4;    const TRACK_TYPE_FORWARD_CARD = 5;    const TRACK_TYPE_LOOK_CARD = 6;    const TRACK_TYPE_LOOK_VIDEO = 7;    const TRACK_TYPE_SAVE_MOBILE = 8;    const TRACK_TYPE_LIKE = 9;    const TRACK_TYPE_COLLECT = 10;    const TRACK_TYPE_COMMENT = 11;    const TRACK_TYPE_LOOK_DYNAMIC = 12;    const TRACK_TYPE_LOOK_NEWS = 13;    const TRACK_TYPE_LOOK_LIVE = 14;    const TRACK_TYPE_LOOK_EDUCATION = 15;    const TRACK_TYPE_LIKE_TAG = -1;    public static $trackTypeData = [        self::TRACK_TYPE_MALL_INDEX => "商城",        self::TRACK_TYPE_GRAPHIC => "图文",        self::TRACK_TYPE_GOODS => "商品",        self::TRACK_TYPE_AUTH_MOBILE => "手机号码",        self::TRACK_TYPE_FORWARD_CARD => "名片",        self::TRACK_TYPE_LOOK_CARD => "名片",        self::TRACK_TYPE_LOOK_VIDEO => "视频",        self::TRACK_TYPE_SAVE_MOBILE => "手机号码",        self::TRACK_TYPE_LIKE => "名片",        self::TRACK_TYPE_COLLECT => "分享的商品",        self::TRACK_TYPE_COMMENT => "分享的商品",        self::TRACK_TYPE_LOOK_DYNAMIC => "动态",    ];    //轨迹类型对应的动作    public static $trackActions = [        self::TRACK_TYPE_MALL_INDEX => "查看",        self::TRACK_TYPE_GRAPHIC => "查看",        self::TRACK_TYPE_GOODS => "查看",        self::TRACK_TYPE_AUTH_MOBILE => "授权",        self::TRACK_TYPE_FORWARD_CARD => "转发",        self::TRACK_TYPE_LOOK_CARD => "查看",        self::TRACK_TYPE_LOOK_VIDEO => "查看",        self::TRACK_TYPE_SAVE_MOBILE => "复制",        self::TRACK_TYPE_LIKE => "点赞",        self::TRACK_TYPE_COLLECT => "收藏",        self::TRACK_TYPE_COMMENT => "评论",        self::TRACK_TYPE_LOOK_DYNAMIC => "查看",    ];    public static $trackTypes = [        self::TRACK_TYPE_MALL_INDEX => "查看首页",        self::TRACK_TYPE_GRAPHIC => "查看图文",        self::TRACK_TYPE_GOODS => "查看商品",        self::TRACK_TYPE_AUTH_MOBILE => "授权号码",        self::TRACK_TYPE_FORWARD_CARD => "转发名片",        self::TRACK_TYPE_LOOK_CARD => "查看名片",        self::TRACK_TYPE_LOOK_VIDEO => "查看视频",        self::TRACK_TYPE_SAVE_MOBILE => "保存手机",        self::TRACK_TYPE_LIKE => "点赞",        self::TRACK_TYPE_COLLECT => "收藏",        self::TRACK_TYPE_COMMENT => "评论",        self::TRACK_TYPE_LOOK_DYNAMIC => "查看动态",    ];    public static $interests = [        self::TRACK_TYPE_MALL_INDEX => "首页",        self::TRACK_TYPE_GRAPHIC => "图文",        self::TRACK_TYPE_GOODS => "商品",        //self::TRACK_TYPE_AUTH_MOBILE => "授权号码",        self::TRACK_TYPE_LOOK_CARD => "名片",        self::TRACK_TYPE_LOOK_VIDEO => "视频",        self::TRACK_TYPE_LOOK_NEWS => "资讯",        self::TRACK_TYPE_LOOK_LIVE => "直播",        self::TRACK_TYPE_LOOK_EDUCATION => "教育",        //self::TRACK_TYPE_SAVE_MOBILE => "保存手机",//        self::TRACK_TYPE_LIKE => "点赞",//        self::TRACK_TYPE_COLLECT => "收藏",//        self::TRACK_TYPE_COMMENT => "评论",//        self::TRACK_TYPE_LOOK_DYNAMIC => "查看动态",    ];    /**     * {@inheritdoc}     */    public static function tableName()    {        return '{{%plugin_business_card_track_stat}}';    }    /**     * {@inheritdoc}     */    public function rules()    {        return [            [['mall_id', 'user_id','track_user_id'], 'required'],            [['mall_id', 'user_id', 'track_user_id','track_type', 'model_id','created_at', 'deleted_at', 'updated_at', 'is_delete','total'], 'integer'],        ];    }    /**     * {@inheritdoc}     */    public function attributeLabels()    {        return [            'id' => 'ID',            'mall_id' => 'Mall ID',            'user_id' => 'User ID',            'track_user_id' => '轨迹对象id',            'track_type' => '轨迹类型',            'total' => '次数',            'model_id' => '模型id',            'created_at' => 'Created At',            'deleted_at' => 'Deleted At',            'updated_at' => 'Updated At',            'is_delete' => 'Is Delete',        ];    }    public function getUser()    {        return $this->hasOne(User::class, ['id' => 'user_id']);    }    public function geTrackUser()    {        return $this->hasOne(User::class, ['id' => 'track_user_id']);    }    /**     * 获取数据     * @param $params     * @param $fields 字段     * @return \app\models\BaseActiveQuery|array|\yii\db\ActiveRecord|\yii\db\ActiveRecord[]|null     */    public static function getData($params,$fields = []){        $returnData = [];        $query = self::find()->where(["is_delete" => self::NO]);        if(isset($params["id"]) && !empty($params["id"])){            $params["is_one"] = 1;            $query->andWhere(["id" => $params["id"]]);        }        if(isset($params["user_id"]) && !empty($params["user_id"])){            $query->andWhere(["user_id" => $params["user_id"]]);        }        if(isset($params["mall_id"]) && !empty($params["mall_id"])){            $query->andWhere(["mall_id" => $params["mall_id"]]);        }        if(isset($params["model_id"]) && !empty($params["model_id"])){            $query->andWhere(["model_id" => $params["model_id"]]);        }        if(isset($params["track_user_id"]) && !empty($params["track_user_id"])){            $query->andWhere(["track_user_id" => $params["track_user_id"]]);        }        if(isset($params["not_user_id"]) && !empty($params["not_user_id"])){            $query->andWhere(["<>","user_id" , $params["not_user_id"]]);        }        if(isset($params["track_type"]) && !empty($params["track_type"])){            $query->andWhere(["track_type" => $params["track_type"]]);        }        if(isset($params["look_time"]) && !empty($params["look_time"])){            $date_start = date("Y-m-d 00:00:00",strtotime($params["look_time"]));            $date_end = date("Y-m-d 23:59:59",strtotime($params["look_time"]));            $query->andFilterWhere(['between','updated_at',strtotime($date_start), strtotime($date_end)]);        }        //排序        $orderByColumn = isset($params["sort_key"]) ? $params["sort_key"] : "id";        $orderByType = isset($params["sort_val"]) ? $params["sort_val"] : " desc";        $orderBy = $orderByColumn." ".$orderByType;        if(!empty($fields)){            $query->select($fields);        }        if(isset($params["return_count"])){            return $query->count();        }        if(isset($params["group_by"])){            $query->groupBy($params["group_by"]);        }        if(isset($params["return_sum"])){            return $query->sum($params["return_sum"]);        }        $pagination = null;        if(isset($params["limit"]) && isset($params["page"])){            $query->page($pagination, $params['limit'], $params['page']);        }        if(isset($params["user"])){            $query->with(["user"]);        }        if(isset($params["track_user"])){            $query->with(["trackUser"]);        }        $query->asArray()->orderBy($orderBy);        if(isset($params["is_one"]) && $params["is_one"] == 1){            $list = $query->one();            $returnData = $list;        }else{            $list = $query->all();            if(isset($params["limit"]) && isset($params["page"])) {                $returnData["list"] = $list;                $returnData["pagination"] = $pagination;            }else{                $returnData = $list;            }        }        return $returnData;    }    /**     * 操作数据库     * @param $data     * @return bool     */    public static function operateData($data){        $businessCardTrackStatModel = new BusinessCardTrackStat();        if(isset($data["id"]) && !empty($data["id"])){            $businessCardTrackStatModel = self::findOne($data["id"]);            if(empty($businessCardTrackStatModel)){                return false;            }            if($businessCardTrackStatModel->is_delete == self::YES){                return false;            }            $data["mall_id"] = $businessCardTrackStatModel->mall_id;        }        if(isset($data["mall_id"])){            $businessCardTrackStatModel->mall_id = $data["mall_id"];        }        if(isset($data["user_id"])){            $businessCardTrackStatModel->user_id = $data["user_id"];        }        if(isset($data["track_type"])){            $businessCardTrackStatModel->track_type = $data["track_type"];        }        if(isset($data["track_user_id"])){            $businessCardTrackStatModel->track_user_id = $data["track_user_id"];        }        if(isset($data["total"])){            $businessCardTrackStatModel->total = intval($businessCardTrackStatModel->total) + $data["total"];        }        if(isset($data["model_id"])){            $businessCardTrackStatModel->model_id = $data["model_id"];        }        if(isset($data["is_delete"])){            $businessCardTrackStatModel->is_delete = $data["is_delete"];        }        $result = $businessCardTrackStatModel->save();        return $result;    }}